(self.webpackChunkrandom_word_selector=self.webpackChunkrandom_word_selector||[]).push([[427],{427:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>c});var l=n(294),r=n(825),a=n(813);const c=function(){const[e]=(0,r.o)(),[{shouldShowMeaning:t}]=(0,a.d)(),[n,c]=(0,l.useState)([]),[o,d]=(0,l.useMemo)((()=>[n.map(((e,n)=>l.createElement("li",{key:n},e?.word,t?` -> ${e?.meaning}`:""))),n[n.length-1]]),[n]);return l.createElement(l.Fragment,null,l.createElement("div",{id:"words-div",style:{width:"100%"}},l.createElement("div",{id:"current-words-div",style:{width:"100%"},align:"center"},l.createElement("button",{onClick:function(){const t=(l=e.filter((e=>!n.includes(e))))[Math.floor(Math.random()*l.length)];var l;t&&c(n.concat(t))}},"New Word"),n.length===e.length?l.createElement("h2",null,"ALL OUT OF WORDS!!!"):l.createElement(l.Fragment,null,t&&l.createElement("h2",null,d?.meaning),l.createElement("p",null,d?.word))),l.createElement("div",{id:"past-words-div"},o.length?l.createElement(l.Fragment,null,l.createElement("h2",null,"Past words:"),l.createElement("ol",null,o)):"")))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYW5kb20td29yZC1zZWxlY3Rvci8uL3NyYy9jb21wb25lbnRzL1dvcmRTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9yYW5kb20td29yZC1zZWxlY3Rvci8uL3NyYy91dGlscy9jb21tb24uanMiXSwibmFtZXMiOlsid29yZHMiLCJ1c2VXb3Jkc1N0YXRlIiwic2hvdWxkU2hvd01lYW5pbmciLCJ1c2VTZXR0aW5nc1N0YXRlIiwic2VsZWN0ZWRXb3JkcyIsInNldFNlbGVjdGVkV29yZHMiLCJ1c2VTdGF0ZSIsInNlbGVjdGVkTGlzdCIsImxhc3RTZWxlY3RlZFdvcmQiLCJ1c2VNZW1vIiwibWFwIiwieCIsImlkeCIsImtleSIsIndvcmQiLCJtZWFuaW5nIiwibGVuZ3RoIiwiaWQiLCJzdHlsZSIsIndpZHRoIiwiYWxpZ24iLCJvbkNsaWNrIiwic2VsZWN0ZWRXb3JkIiwiYXJyYXkiLCJmaWx0ZXIiLCJpbmNsdWRlcyIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImNvbmNhdCJdLCJtYXBwaW5ncyI6InVMQTREQSxRQXREQSxXQUNFLE1BQU9BLElBQVNDLFdBQ1Qsa0JBQUVDLEtBQXVCQyxVQUN6QkMsRUFBZUMsSUFBb0JDLGNBQVMsS0FFNUNDLEVBQWNDLElBQW9CQyxjQUFRLElBQ3hDLENBQ0xMLEVBQWNNLEtBQUksQ0FBQ0MsRUFBR0MsSUFDcEIsc0JBQUlDLElBQUtELEdBQ05ELEdBQUdHLEtBQ0haLEVBQXFCLE9BQU1TLEdBQUdJLFVBQVksTUFHL0NYLEVBQWNBLEVBQWNZLE9BQVMsS0FFdEMsQ0FBQ1osSUFVSixPQUNFLGdDQUNFLHVCQUFLYSxHQUFHLFlBQVlDLE1BQU8sQ0FBRUMsTUFBTyxTQUNsQyx1QkFBS0YsR0FBRyxvQkFBb0JDLE1BQU8sQ0FBRUMsTUFBTyxRQUFVQyxNQUFNLFVBQzFELDBCQUFRQyxRQVpoQixXQUNFLE1BQU1DLEdDbkJ1QkMsRURtQlN2QixFQUFNd0IsUUFBUWIsSUFBT1AsRUFBY3FCLFNBQVNkLE1DbEJsRWUsS0FBS0MsTUFBTUQsS0FBS0UsU0FBV0wsRUFBTVAsU0FEOUMsSUFBMEJPLEVEcUJ4QkQsR0FFTGpCLEVBQWlCRCxFQUFjeUIsT0FBT1AsTUFPaEMsWUFDQ2xCLEVBQWNZLFNBQVdoQixFQUFNZ0IsT0FDOUIsaURBRUEsZ0NBQ0dkLEdBQXFCLDBCQUFLTSxHQUFrQk8sU0FDN0MseUJBQUlQLEdBQWtCTSxRQUk1Qix1QkFBS0csR0FBRyxrQkFDTFYsRUFBYVMsT0FDWixnQ0FDRSx5Q0FDQSwwQkFBS1QsSUFHUCIsImZpbGUiOiI0MjcuMmM0MS5jaHVuay5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VNZW1vLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgdXNlV29yZHNTdGF0ZSB9IGZyb20gJy4uL2NvbnRleHRzL3dvcmRzJztcbmltcG9ydCB7IGdldFJhbmRvbUVsZW1lbnQgfSBmcm9tICcuLi91dGlscy9jb21tb24nO1xuaW1wb3J0IHsgdXNlU2V0dGluZ3NTdGF0ZSB9IGZyb20gJy4uL2NvbnRleHRzL3NldHRpbmdzJztcblxuZnVuY3Rpb24gV29yZFNlbGVjdG9yKCkge1xuICBjb25zdCBbd29yZHNdID0gdXNlV29yZHNTdGF0ZSgpO1xuICBjb25zdCBbeyBzaG91bGRTaG93TWVhbmluZyB9XSA9IHVzZVNldHRpbmdzU3RhdGUoKTtcbiAgY29uc3QgW3NlbGVjdGVkV29yZHMsIHNldFNlbGVjdGVkV29yZHNdID0gdXNlU3RhdGUoW10pO1xuXG4gIGNvbnN0IFtzZWxlY3RlZExpc3QsIGxhc3RTZWxlY3RlZFdvcmRdID0gdXNlTWVtbygoKSA9PiB7XG4gICAgcmV0dXJuIFtcbiAgICAgIHNlbGVjdGVkV29yZHMubWFwKCh4LCBpZHgpID0+IChcbiAgICAgICAgPGxpIGtleT17aWR4fT5cbiAgICAgICAgICB7eD8ud29yZH1cbiAgICAgICAgICB7c2hvdWxkU2hvd01lYW5pbmcgPyBgIC0+ICR7eD8ubWVhbmluZ31gIDogJyd9XG4gICAgICAgIDwvbGk+XG4gICAgICApKSxcbiAgICAgIHNlbGVjdGVkV29yZHNbc2VsZWN0ZWRXb3Jkcy5sZW5ndGggLSAxXVxuICAgIF07XG4gIH0sIFtzZWxlY3RlZFdvcmRzXSk7XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3V29yZENsaWNrKCkge1xuICAgIGNvbnN0IHNlbGVjdGVkV29yZCA9IGdldFJhbmRvbUVsZW1lbnQod29yZHMuZmlsdGVyKCh4KSA9PiAhc2VsZWN0ZWRXb3Jkcy5pbmNsdWRlcyh4KSkpO1xuXG4gICAgaWYgKCFzZWxlY3RlZFdvcmQpIHJldHVybjtcblxuICAgIHNldFNlbGVjdGVkV29yZHMoc2VsZWN0ZWRXb3Jkcy5jb25jYXQoc2VsZWN0ZWRXb3JkKSk7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8ZGl2IGlkPVwid29yZHMtZGl2XCIgc3R5bGU9e3sgd2lkdGg6ICcxMDAlJyB9fT5cbiAgICAgICAgPGRpdiBpZD1cImN1cnJlbnQtd29yZHMtZGl2XCIgc3R5bGU9e3sgd2lkdGg6ICcxMDAlJyB9fSBhbGlnbj1cImNlbnRlclwiPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17aGFuZGxlTmV3V29yZENsaWNrfT5OZXcgV29yZDwvYnV0dG9uPlxuICAgICAgICAgIHtzZWxlY3RlZFdvcmRzLmxlbmd0aCA9PT0gd29yZHMubGVuZ3RoID8gKFxuICAgICAgICAgICAgPGgyPkFMTCBPVVQgT0YgV09SRFMhISE8L2gyPlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICA8PlxuICAgICAgICAgICAgICB7c2hvdWxkU2hvd01lYW5pbmcgJiYgPGgyPntsYXN0U2VsZWN0ZWRXb3JkPy5tZWFuaW5nfTwvaDI+fVxuICAgICAgICAgICAgICA8cD57bGFzdFNlbGVjdGVkV29yZD8ud29yZH08L3A+XG4gICAgICAgICAgICA8Lz5cbiAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBpZD1cInBhc3Qtd29yZHMtZGl2XCI+XG4gICAgICAgICAge3NlbGVjdGVkTGlzdC5sZW5ndGggPyAoXG4gICAgICAgICAgICA8PlxuICAgICAgICAgICAgICA8aDI+UGFzdCB3b3Jkczo8L2gyPlxuICAgICAgICAgICAgICA8b2w+e3NlbGVjdGVkTGlzdH08L29sPlxuICAgICAgICAgICAgPC8+XG4gICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICcnXG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8Lz5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgV29yZFNlbGVjdG9yO1xuIiwiLyoqXG4gKiBSZXR1cm5zIGEgcmFuZG9tIGVsZW1lbnQgZnJvbSBnaXZlbiBhcnJheS5cbiAqXG4gKiBAcGFyYW0ge2FueVtdfSBhcnJheVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmFuZG9tRWxlbWVudChhcnJheSkge1xuICBjb25zdCByYW5kSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBhcnJheS5sZW5ndGgpO1xuXG4gIHJldHVybiBhcnJheVtyYW5kSW5kZXhdO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==