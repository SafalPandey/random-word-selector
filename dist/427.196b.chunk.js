(self.webpackChunkrandom_word_selector=self.webpackChunkrandom_word_selector||[]).push([[427],{427:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>d});var l=n(294),r=n(825),a=n(844);const d=function(){const[e]=(0,r.o)(),[{shouldShowMeaning:t}]=(0,a.d)(),[n,d]=(0,l.useState)([]),c=n?.length===e?.length,[o,i]=(0,l.useMemo)((()=>[n.map(((e,n)=>l.createElement("li",{key:n},e?.word,t?` -> ${e?.meaning}`:""))),n[n.length-1]]),[n]);return l.createElement(l.Fragment,null,l.createElement("div",{id:"words-div",style:{width:"100%"}},l.createElement("div",{id:"current-words-div",style:{width:"100%"},align:"center"},l.createElement("button",{onClick:function(){const t=(l=e.filter((e=>!n.includes(e))))[Math.floor(Math.random()*l.length)];var l;t&&d(n.concat(t))},disabled:c},"New Word"),c?l.createElement("h2",null,"ALL OUT OF WORDS!!!"):l.createElement(l.Fragment,null,t&&l.createElement("h2",null,i?.meaning),l.createElement("p",null,i?.word))),l.createElement("div",{id:"past-words-div"},o.length?l.createElement(l.Fragment,null,l.createElement("h2",null,"Past words:"),l.createElement("ol",null,o)):"")))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYW5kb20td29yZC1zZWxlY3Rvci8uL3NyYy9jb21wb25lbnRzL1dvcmRTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9yYW5kb20td29yZC1zZWxlY3Rvci8uL3NyYy91dGlscy9jb21tb24uanMiXSwibmFtZXMiOlsid29yZHMiLCJ1c2VXb3Jkc1N0YXRlIiwic2hvdWxkU2hvd01lYW5pbmciLCJ1c2VTZXR0aW5nc1N0YXRlIiwic2VsZWN0ZWRXb3JkcyIsInNldFNlbGVjdGVkV29yZHMiLCJ1c2VTdGF0ZSIsImlzTGlzdEV4aGF1c3RlZCIsImxlbmd0aCIsInNlbGVjdGVkTGlzdCIsImxhc3RTZWxlY3RlZFdvcmQiLCJ1c2VNZW1vIiwibWFwIiwieCIsImlkeCIsImtleSIsIndvcmQiLCJtZWFuaW5nIiwiaWQiLCJzdHlsZSIsIndpZHRoIiwiYWxpZ24iLCJvbkNsaWNrIiwic2VsZWN0ZWRXb3JkIiwiYXJyYXkiLCJmaWx0ZXIiLCJpbmNsdWRlcyIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImNvbmNhdCIsImRpc2FibGVkIl0sIm1hcHBpbmdzIjoidUxBNkRBLFFBdkRBLFdBQ0UsTUFBT0EsSUFBU0MsV0FDVCxrQkFBRUMsS0FBdUJDLFVBQ3pCQyxFQUFlQyxJQUFvQkMsY0FBUyxJQUM3Q0MsRUFBa0JILEdBQWVJLFNBQVdSLEdBQU9RLFFBRWxEQyxFQUFjQyxJQUFvQkMsY0FBUSxJQUN4QyxDQUNMUCxFQUFjUSxLQUFJLENBQUNDLEVBQUdDLElBQ3BCLHNCQUFJQyxJQUFLRCxHQUNORCxHQUFHRyxLQUNIZCxFQUFxQixPQUFNVyxHQUFHSSxVQUFZLE1BRy9DYixFQUFjQSxFQUFjSSxPQUFTLEtBRXRDLENBQUNKLElBVUosT0FDRSxnQ0FDRSx1QkFBS2MsR0FBRyxZQUFZQyxNQUFPLENBQUVDLE1BQU8sU0FDbEMsdUJBQUtGLEdBQUcsb0JBQW9CQyxNQUFPLENBQUVDLE1BQU8sUUFBVUMsTUFBTSxVQUMxRCwwQkFBUUMsUUFaaEIsV0FDRSxNQUFNQyxHQ3BCdUJDLEVEb0JTeEIsRUFBTXlCLFFBQVFaLElBQU9ULEVBQWNzQixTQUFTYixNQ25CbEVjLEtBQUtDLE1BQU1ELEtBQUtFLFNBQVdMLEVBQU1oQixTQUQ5QyxJQUEwQmdCLEVEc0J4QkQsR0FFTGxCLEVBQWlCRCxFQUFjMEIsT0FBT1AsS0FPS1EsU0FBVXhCLEdBQS9DLFlBQ0NBLEVBQ0MsaURBRUEsZ0NBQ0dMLEdBQXFCLDBCQUFLUSxHQUFrQk8sU0FDN0MseUJBQUlQLEdBQWtCTSxRQUk1Qix1QkFBS0UsR0FBRyxrQkFDTFQsRUFBYUQsT0FDWixnQ0FDRSx5Q0FDQSwwQkFBS0MsSUFHUCIsImZpbGUiOiI0MjcuMTk2Yi5jaHVuay5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VNZW1vLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgdXNlV29yZHNTdGF0ZSB9IGZyb20gJy4uL2NvbnRleHRzL3dvcmRzJztcbmltcG9ydCB7IGdldFJhbmRvbUVsZW1lbnQgfSBmcm9tICcuLi91dGlscy9jb21tb24nO1xuaW1wb3J0IHsgdXNlU2V0dGluZ3NTdGF0ZSB9IGZyb20gJy4uL2NvbnRleHRzL3NldHRpbmdzJztcblxuZnVuY3Rpb24gV29yZFNlbGVjdG9yKCkge1xuICBjb25zdCBbd29yZHNdID0gdXNlV29yZHNTdGF0ZSgpO1xuICBjb25zdCBbeyBzaG91bGRTaG93TWVhbmluZyB9XSA9IHVzZVNldHRpbmdzU3RhdGUoKTtcbiAgY29uc3QgW3NlbGVjdGVkV29yZHMsIHNldFNlbGVjdGVkV29yZHNdID0gdXNlU3RhdGUoW10pO1xuICBjb25zdCBpc0xpc3RFeGhhdXN0ZWQgPSBzZWxlY3RlZFdvcmRzPy5sZW5ndGggPT09IHdvcmRzPy5sZW5ndGg7XG5cbiAgY29uc3QgW3NlbGVjdGVkTGlzdCwgbGFzdFNlbGVjdGVkV29yZF0gPSB1c2VNZW1vKCgpID0+IHtcbiAgICByZXR1cm4gW1xuICAgICAgc2VsZWN0ZWRXb3Jkcy5tYXAoKHgsIGlkeCkgPT4gKFxuICAgICAgICA8bGkga2V5PXtpZHh9PlxuICAgICAgICAgIHt4Py53b3JkfVxuICAgICAgICAgIHtzaG91bGRTaG93TWVhbmluZyA/IGAgLT4gJHt4Py5tZWFuaW5nfWAgOiAnJ31cbiAgICAgICAgPC9saT5cbiAgICAgICkpLFxuICAgICAgc2VsZWN0ZWRXb3Jkc1tzZWxlY3RlZFdvcmRzLmxlbmd0aCAtIDFdXG4gICAgXTtcbiAgfSwgW3NlbGVjdGVkV29yZHNdKTtcblxuICBmdW5jdGlvbiBoYW5kbGVOZXdXb3JkQ2xpY2soKSB7XG4gICAgY29uc3Qgc2VsZWN0ZWRXb3JkID0gZ2V0UmFuZG9tRWxlbWVudCh3b3Jkcy5maWx0ZXIoKHgpID0+ICFzZWxlY3RlZFdvcmRzLmluY2x1ZGVzKHgpKSk7XG5cbiAgICBpZiAoIXNlbGVjdGVkV29yZCkgcmV0dXJuO1xuXG4gICAgc2V0U2VsZWN0ZWRXb3JkcyhzZWxlY3RlZFdvcmRzLmNvbmNhdChzZWxlY3RlZFdvcmQpKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXYgaWQ9XCJ3b3Jkcy1kaXZcIiBzdHlsZT17eyB3aWR0aDogJzEwMCUnIH19PlxuICAgICAgICA8ZGl2IGlkPVwiY3VycmVudC13b3Jkcy1kaXZcIiBzdHlsZT17eyB3aWR0aDogJzEwMCUnIH19IGFsaWduPVwiY2VudGVyXCI+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtoYW5kbGVOZXdXb3JkQ2xpY2t9IGRpc2FibGVkPXtpc0xpc3RFeGhhdXN0ZWR9Pk5ldyBXb3JkPC9idXR0b24+XG4gICAgICAgICAge2lzTGlzdEV4aGF1c3RlZCA/IChcbiAgICAgICAgICAgIDxoMj5BTEwgT1VUIE9GIFdPUkRTISEhPC9oMj5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAge3Nob3VsZFNob3dNZWFuaW5nICYmIDxoMj57bGFzdFNlbGVjdGVkV29yZD8ubWVhbmluZ308L2gyPn1cbiAgICAgICAgICAgICAgPHA+e2xhc3RTZWxlY3RlZFdvcmQ/LndvcmR9PC9wPlxuICAgICAgICAgICAgPC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgaWQ9XCJwYXN0LXdvcmRzLWRpdlwiPlxuICAgICAgICAgIHtzZWxlY3RlZExpc3QubGVuZ3RoID8gKFxuICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgPGgyPlBhc3Qgd29yZHM6PC9oMj5cbiAgICAgICAgICAgICAgPG9sPntzZWxlY3RlZExpc3R9PC9vbD5cbiAgICAgICAgICAgIDwvPlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAnJ1xuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFdvcmRTZWxlY3RvcjtcbiIsIi8qKlxuICogUmV0dXJucyBhIHJhbmRvbSBlbGVtZW50IGZyb20gZ2l2ZW4gYXJyYXkuXG4gKlxuICogQHBhcmFtIHthbnlbXX0gYXJyYXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJhbmRvbUVsZW1lbnQoYXJyYXkpIHtcbiAgY29uc3QgcmFuZEluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYXJyYXkubGVuZ3RoKTtcblxuICByZXR1cm4gYXJyYXlbcmFuZEluZGV4XTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=