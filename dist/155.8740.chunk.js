(self.webpackChunkrandom_word_selector=self.webpackChunkrandom_word_selector||[]).push([[155],{155:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});var r=n(294),a=n(61),l=n(825);const d="wordsapiv1.p.rapidapi.com",o=`https://${d}/words?random=true`;var i=n(844);const s=function(){const[e]=(0,l.o)(),[t]=(0,i.d)(),[n,s]=(0,r.useState)([]),{dataSource:c,apiKey:u,shouldShowMeaning:m}=t,[w,h,p]=(0,r.useMemo)((()=>[n.map(((e,t)=>r.createElement("li",{key:t},e?.word,m?` -> ${e?.meaning}`:""))),n[n.length-1],n.length===e.length]),[n]);return r.createElement(r.Fragment,null,r.createElement("div",{id:"words-div",style:{width:"100%"}},r.createElement("div",{id:"current-words-div",style:{width:"100%"},align:"center"},r.createElement("button",{onClick:async function(){const t=c===a.N.API?await async function(e){const t=await fetch(o,{headers:new Headers({useQueryString:!0,"x-rapidapi-key":e,"x-rapidapi-host":d})}),n=await t.json();return{word:n.word,meaning:n.results&&n.results[0]?.definition}}(u):(r=e.filter((e=>!n.includes(e))))[Math.floor(Math.random()*r.length)];var r;t&&s(n.concat(t))},disabled:p},"New Word"),p?r.createElement("h2",null,"ALL OUT OF WORDS!!!"):r.createElement(r.Fragment,null,m&&r.createElement("h2",null,h?.meaning),r.createElement("p",null,h?.word))),r.createElement("div",{id:"past-words-div"},w.length?r.createElement(r.Fragment,null,r.createElement("h2",null,"Past words:"),r.createElement("ol",null,w)):"")))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yYW5kb20td29yZC1zZWxlY3Rvci8uL3NyYy9zZXJ2aWNlcy93b3Jkc0FwaS5qcyIsIndlYnBhY2s6Ly9yYW5kb20td29yZC1zZWxlY3Rvci8uL3NyYy9jb21wb25lbnRzL1dvcmRTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9yYW5kb20td29yZC1zZWxlY3Rvci8uL3NyYy91dGlscy9jb21tb24uanMiXSwibmFtZXMiOlsiV09SRFNfQVBJX0hPU1QiLCJSQU5ET01fV09SRF9BUElfVVJMIiwid29yZHMiLCJ1c2VXb3Jkc1N0YXRlIiwic2V0dGluZ3MiLCJ1c2VTZXR0aW5nc1N0YXRlIiwic2VsZWN0ZWRXb3JkcyIsInNldFNlbGVjdGVkV29yZHMiLCJ1c2VTdGF0ZSIsImRhdGFTb3VyY2UiLCJhcGlLZXkiLCJzaG91bGRTaG93TWVhbmluZyIsInNlbGVjdGVkTGlzdCIsImxhc3RTZWxlY3RlZFdvcmQiLCJpc0xpc3RFeGhhdXN0ZWQiLCJ1c2VNZW1vIiwibWFwIiwieCIsImlkeCIsImtleSIsIndvcmQiLCJtZWFuaW5nIiwibGVuZ3RoIiwiaWQiLCJzdHlsZSIsIndpZHRoIiwiYWxpZ24iLCJvbkNsaWNrIiwiYXN5bmMiLCJzZWxlY3RlZFdvcmQiLCJEYXRhU291cmNlcyIsInJlc3VsdCIsImZldGNoIiwiaGVhZGVycyIsIkhlYWRlcnMiLCJ1c2VRdWVyeVN0cmluZyIsInJlc3BvbnNlIiwianNvbiIsInJlc3VsdHMiLCJkZWZpbml0aW9uIiwiZmV0Y2hSYW5kb21Xb3JkIiwiYXJyYXkiLCJmaWx0ZXIiLCJpbmNsdWRlcyIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImNvbmNhdCIsImRpc2FibGVkIl0sIm1hcHBpbmdzIjoic0xBQUEsTUFBTUEsRUFBaUIsNEJBQ1ZDLEVBQXVCLFdBQVVELHNCLGFDcUU5QyxRQTlEQSxXQUNFLE1BQU9FLElBQVNDLFVBQ1RDLElBQVlDLFVBQ1pDLEVBQWVDLElBQW9CQyxjQUFTLEtBRTdDLFdBQUVDLEVBQUYsT0FBY0MsRUFBZCxrQkFBc0JDLEdBQXNCUCxHQUUzQ1EsRUFBY0MsRUFBa0JDLElBQW1CQyxjQUFRLElBQ3pELENBQ0xULEVBQWNVLEtBQUksQ0FBQ0MsRUFBR0MsSUFDcEIsc0JBQUlDLElBQUtELEdBQ05ELEdBQUdHLEtBQ0hULEVBQXFCLE9BQU1NLEdBQUdJLFVBQVksTUFHL0NmLEVBQWNBLEVBQWNnQixPQUFTLEdBQ3JDaEIsRUFBY2dCLFNBQVdwQixFQUFNb0IsU0FFaEMsQ0FBQ2hCLElBYUosT0FDRSxnQ0FDRSx1QkFBS2lCLEdBQUcsWUFBWUMsTUFBTyxDQUFFQyxNQUFPLFNBQ2xDLHVCQUFLRixHQUFHLG9CQUFvQkMsTUFBTyxDQUFFQyxNQUFPLFFBQVVDLE1BQU0sVUFDMUQsMEJBQVFDLFFBZmhCQyxpQkFDRSxNQUFNQyxFQUNKcEIsSUFBZXFCLGNEckJkRixlQUErQmxCLEdBQ3BDLE1BQU1xQixRQUFlQyxNQUFNL0IsRUFBcUIsQ0FDOUNnQyxRQUFTLElBQUlDLFFBQVEsQ0FDbkJDLGdCQUFnQixFQUNoQixpQkFBa0J6QixFQUNsQixrQkFBbUJWLE1BSWpCb0MsUUFBaUJMLEVBQU9NLE9BRTlCLE1BQU8sQ0FDTGpCLEtBQU1nQixFQUFTaEIsS0FDZkMsUUFBU2UsRUFBU0UsU0FBV0YsRUFBU0UsUUFBUSxJQUFJQyxZQ1N0Q0MsQ0FBZ0I5QixJQzFCQytCLEVEMkJOdkMsRUFBTXdDLFFBQVF6QixJQUFPWCxFQUFjcUMsU0FBUzFCLE1DMUJuRDJCLEtBQUtDLE1BQU1ELEtBQUtFLFNBQVdMLEVBQU1uQixTQUQ5QyxJQUEwQm1CLEVENkJ4QlosR0FFTHRCLEVBQWlCRCxFQUFjeUMsT0FBT2xCLEtBT0ttQixTQUFVbEMsR0FBL0MsWUFHQ0EsRUFDQyxpREFFQSxnQ0FDR0gsR0FBcUIsMEJBQUtFLEdBQWtCUSxTQUM3Qyx5QkFBSVIsR0FBa0JPLFFBSTVCLHVCQUFLRyxHQUFHLGtCQUNMWCxFQUFhVSxPQUNaLGdDQUNFLHlDQUNBLDBCQUFLVixJQUdQIiwiZmlsZSI6IjE1NS44NzQwLmNodW5rLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgV09SRFNfQVBJX0hPU1QgPSAnd29yZHNhcGl2MS5wLnJhcGlkYXBpLmNvbSc7XG5leHBvcnQgY29uc3QgUkFORE9NX1dPUkRfQVBJX1VSTCA9IGBodHRwczovLyR7V09SRFNfQVBJX0hPU1R9L3dvcmRzP3JhbmRvbT10cnVlYDtcblxuLyoqXG4gKiBGZXRjaGVzIHJhbmRvbSB3b3JkIGZyb20gUmFwaWRBUEkuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGFwaUtleVxuICogQHJldHVybnMge1Byb21pc2U8Pn1cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoUmFuZG9tV29yZChhcGlLZXkpIHtcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZmV0Y2goUkFORE9NX1dPUkRfQVBJX1VSTCwge1xuICAgIGhlYWRlcnM6IG5ldyBIZWFkZXJzKHtcbiAgICAgIHVzZVF1ZXJ5U3RyaW5nOiB0cnVlLFxuICAgICAgJ3gtcmFwaWRhcGkta2V5JzogYXBpS2V5LFxuICAgICAgJ3gtcmFwaWRhcGktaG9zdCc6IFdPUkRTX0FQSV9IT1NUXG4gICAgfSlcbiAgfSk7XG5cbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXN1bHQuanNvbigpO1xuXG4gIHJldHVybiB7XG4gICAgd29yZDogcmVzcG9uc2Uud29yZCxcbiAgICBtZWFuaW5nOiByZXNwb25zZS5yZXN1bHRzICYmIHJlc3BvbnNlLnJlc3VsdHNbMF0/LmRlZmluaXRpb25cbiAgfVxufVxuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8sIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBEYXRhU291cmNlcyB9IGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgeyB1c2VXb3Jkc1N0YXRlIH0gZnJvbSAnLi4vY29udGV4dHMvd29yZHMnO1xuaW1wb3J0IHsgZ2V0UmFuZG9tRWxlbWVudCB9IGZyb20gJy4uL3V0aWxzL2NvbW1vbic7XG5pbXBvcnQgeyBmZXRjaFJhbmRvbVdvcmQgfSBmcm9tICcuLi9zZXJ2aWNlcy93b3Jkc0FwaSc7XG5pbXBvcnQgeyB1c2VTZXR0aW5nc1N0YXRlIH0gZnJvbSAnLi4vY29udGV4dHMvc2V0dGluZ3MnO1xuXG5mdW5jdGlvbiBXb3JkU2VsZWN0b3IoKSB7XG4gIGNvbnN0IFt3b3Jkc10gPSB1c2VXb3Jkc1N0YXRlKCk7XG4gIGNvbnN0IFtzZXR0aW5nc10gPSB1c2VTZXR0aW5nc1N0YXRlKCk7XG4gIGNvbnN0IFtzZWxlY3RlZFdvcmRzLCBzZXRTZWxlY3RlZFdvcmRzXSA9IHVzZVN0YXRlKFtdKTtcblxuICBjb25zdCB7IGRhdGFTb3VyY2UsIGFwaUtleSwgc2hvdWxkU2hvd01lYW5pbmcgfSA9IHNldHRpbmdzO1xuXG4gIGNvbnN0IFtzZWxlY3RlZExpc3QsIGxhc3RTZWxlY3RlZFdvcmQsIGlzTGlzdEV4aGF1c3RlZF0gPSB1c2VNZW1vKCgpID0+IHtcbiAgICByZXR1cm4gW1xuICAgICAgc2VsZWN0ZWRXb3Jkcy5tYXAoKHgsIGlkeCkgPT4gKFxuICAgICAgICA8bGkga2V5PXtpZHh9PlxuICAgICAgICAgIHt4Py53b3JkfVxuICAgICAgICAgIHtzaG91bGRTaG93TWVhbmluZyA/IGAgLT4gJHt4Py5tZWFuaW5nfWAgOiAnJ31cbiAgICAgICAgPC9saT5cbiAgICAgICkpLFxuICAgICAgc2VsZWN0ZWRXb3Jkc1tzZWxlY3RlZFdvcmRzLmxlbmd0aCAtIDFdLFxuICAgICAgc2VsZWN0ZWRXb3Jkcy5sZW5ndGggPT09IHdvcmRzLmxlbmd0aFxuICAgIF07XG4gIH0sIFtzZWxlY3RlZFdvcmRzXSk7XG5cbiAgYXN5bmMgZnVuY3Rpb24gaGFuZGxlTmV3V29yZENsaWNrKCkge1xuICAgIGNvbnN0IHNlbGVjdGVkV29yZCA9XG4gICAgICBkYXRhU291cmNlID09PSBEYXRhU291cmNlcy5BUElcbiAgICAgICAgPyBhd2FpdCBmZXRjaFJhbmRvbVdvcmQoYXBpS2V5KVxuICAgICAgICA6IGdldFJhbmRvbUVsZW1lbnQod29yZHMuZmlsdGVyKCh4KSA9PiAhc2VsZWN0ZWRXb3Jkcy5pbmNsdWRlcyh4KSkpO1xuXG4gICAgaWYgKCFzZWxlY3RlZFdvcmQpIHJldHVybjtcblxuICAgIHNldFNlbGVjdGVkV29yZHMoc2VsZWN0ZWRXb3Jkcy5jb25jYXQoc2VsZWN0ZWRXb3JkKSk7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8ZGl2IGlkPVwid29yZHMtZGl2XCIgc3R5bGU9e3sgd2lkdGg6ICcxMDAlJyB9fT5cbiAgICAgICAgPGRpdiBpZD1cImN1cnJlbnQtd29yZHMtZGl2XCIgc3R5bGU9e3sgd2lkdGg6ICcxMDAlJyB9fSBhbGlnbj1cImNlbnRlclwiPlxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17aGFuZGxlTmV3V29yZENsaWNrfSBkaXNhYmxlZD17aXNMaXN0RXhoYXVzdGVkfT5cbiAgICAgICAgICAgIE5ldyBXb3JkXG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAge2lzTGlzdEV4aGF1c3RlZCA/IChcbiAgICAgICAgICAgIDxoMj5BTEwgT1VUIE9GIFdPUkRTISEhPC9oMj5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAge3Nob3VsZFNob3dNZWFuaW5nICYmIDxoMj57bGFzdFNlbGVjdGVkV29yZD8ubWVhbmluZ308L2gyPn1cbiAgICAgICAgICAgICAgPHA+e2xhc3RTZWxlY3RlZFdvcmQ/LndvcmR9PC9wPlxuICAgICAgICAgICAgPC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgaWQ9XCJwYXN0LXdvcmRzLWRpdlwiPlxuICAgICAgICAgIHtzZWxlY3RlZExpc3QubGVuZ3RoID8gKFxuICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgPGgyPlBhc3Qgd29yZHM6PC9oMj5cbiAgICAgICAgICAgICAgPG9sPntzZWxlY3RlZExpc3R9PC9vbD5cbiAgICAgICAgICAgIDwvPlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAnJ1xuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFdvcmRTZWxlY3RvcjtcbiIsIi8qKlxuICogUmV0dXJucyBhIHJhbmRvbSBlbGVtZW50IGZyb20gZ2l2ZW4gYXJyYXkuXG4gKlxuICogQHBhcmFtIHthbnlbXX0gYXJyYXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJhbmRvbUVsZW1lbnQoYXJyYXkpIHtcbiAgY29uc3QgcmFuZEluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYXJyYXkubGVuZ3RoKTtcblxuICByZXR1cm4gYXJyYXlbcmFuZEluZGV4XTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=