(self.webpackChunkrandom_word_selector=self.webpackChunkrandom_word_selector||[]).push([[16],{16:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>m});var r=n(294),a=n(977);const o=function({settings:e,setSettings:t}){return r.createElement(r.Fragment,null,r.createElement("h2",null,"Settings"),r.createElement("div",{id:"settings",style:{width:"80%"}},r.createElement("input",{type:"checkbox",id:"display-meaning-setting",onChange:e=>t({shouldShowMeaning:e.target.checked}),checked:e.shouldShowMeaning}),r.createElement("label",{htmlFor:"display-meaning-setting"},"Display the meaning of current word")),r.createElement("br",null))};var i=n(997),s=n(61);const l=function(e){const{setCustomWords:t,customWords:n,dataSource:a,setDataSource:o}=e;return r.createElement(r.Fragment,null,r.createElement("h2",null,"Data source"),r.createElement("div",{id:"words-input-div",style:{width:"100%",display:"flex",flexDirection:"row",flexWrap:"wrap"}},r.createElement("div",{id:"source-setting",style:{width:"20%"}},r.createElement("input",{id:"input-source-static",name:"data-source",type:"radio",onClick:()=>o(s.N.STATIC),defaultChecked:a===s.N.STATIC}),r.createElement("label",{htmlFor:"input-source-static"},r.createElement("strong",null,"Static list")),r.createElement("br",null),r.createElement("br",null),r.createElement("input",{id:"input-source-api",name:"data-source",type:"radio",onClick:()=>o(s.N.API),defaultChecked:a===s.N.API}),r.createElement("label",{htmlFor:"input-source-api"},r.createElement("strong",null,"API source"))),r.createElement("div",{id:"source-input",style:{width:"80%"}},a===s.N.STATIC?r.createElement("textarea",{id:"input-static-list",onChange:e=>t(e.target.value),placeholder:i.Q,style:{height:"50vh",width:"80%"},value:n}):r.createElement("em",{style:{height:"15vh",width:"80%"}},'Data will be fetched from "',s.W,'".'))))};var d=n(825),u=n(844);const m=function(){const e=(0,a.k6)(),[t,n,i]=(0,d.o)(),[m,c]=(0,u.d)(),{dataSource:g,shouldShowMeaning:w}=m,h=t&&JSON.stringify(t,null,2)||"",[E,p]=(0,r.useState)(h),[y,f]=(0,r.useState)(g);return r.createElement(r.Fragment,null,r.createElement(l,{words:t,settings:m,dataSource:y,customWords:E,setDataSource:f,setCustomWords:p}),r.createElement(o,{settings:m,setSettings:c}),r.createElement("button",{style:{height:"2em",fontSize:"1.25em"},onClick:()=>{try{y===s.N.STATIC&&(()=>{if(!E)return void i();const e=function(e,t){let n;try{n=JSON.parse(e)}catch(t){n=e.split(",").reduce(((e,t)=>{const n=t.trim();return n&&e.push({word:n}),e}),[])}if(!Array.isArray(n))throw new Error("Custom words needs to be an array.");for(let{word:e,meaning:r}of n){if(!e)throw new Error(`Every element in passed data must have a "word" ${t?'as well as a "meaning"':""} property.`);if(t&&!r)throw new Error('Every element in passed data must have a "meaning" property.\n\nTurn off "Display meaning of current word" setting to continue without "meaning" property.')}return n}(E,w);n(e)})(),c({dataSource:y}),e.push("/selector")}catch(e){console.error(e),alert(e.message)}}},"Submit"))}},997:(e,t,n)=>{"use strict";n.d(t,{X:()=>r,Q:()=>a});const r=[{word:"FLABBERGASTED",meaning:"As if struck dumb with astonishment and surprise"},{word:"ARCANE",meaning:"Requiring secret or mysterious knowledge"},{word:"GLUTTONY",meaning:"Habitual eating to excess"},{word:"EMPATHY",meaning:"Understanding and entering into another s feelings"},{word:"INEPT",meaning:"Generally incompetent and ineffectual"},{word:"IMPECCABLE",meaning:"Without fault or error"},{word:"EMBEZZLE",meaning:"Appropriate fraudulently to one s own use"},{word:"ABERRATION",meaning:"A state or condition markedly different from the norm"},{word:"DEFERENTIAL",meaning:"Showing courteous regard for people s feelings"},{word:"CUMULATIVE",meaning:"Increasing by successive addition"},{word:"INSATIABLE",meaning:"Impossible to satisfy"},{word:"BRUSQUE",meaning:"Rudely abrupt or blunt in speech or manner"},{word:"INHIBIT",meaning:"Limit the range or extent of"},{word:"CANDOR",meaning:"The quality of being honest and straightforward"},{word:"COMPLACENCY",meaning:"The feeling you have when you are satisfied with yourself"},{word:"GRATUITOUS",meaning:"Unnecessary and unwarranted"},{word:"CONFIDANT",meaning:"Someone to whom private matters are told"},{word:"ELATED",meaning:"Exultantly proud and joyful in high spiritsp"},{word:"FABRICATE",meaning:"Make up something artificial or untrue"},{word:"CALLOUS",meaning:"Emotionally hardened"},{word:"INNATE",meaning:"Present at birth but not necessarily hereditary"},{word:"COERCE",meaning:"Cause to do through pressure or necessity"},{word:"BRAZEN",meaning:"Unrestrained by convention or propriety"},{word:"COHERENT",meaning:"Marked by an orderly and consistent relation of parts"},{word:"APPEASE",meaning:"Make peace with"},{word:"HYPOCRISY",meaning:"Pretending to have qualities or beliefs that you do not have"},{word:"ABHOR",meaning:"Find repugnant"},{word:"INFAMY",meaning:"A state of extreme dishonor"},{word:"FORSAKE",meaning:"Leave someone who needs or counts on you leave in the lurch"},{word:"DILIGENT",meaning:"Quietly and steadily persevering in detail or exactness"},{word:"AMIABLE",meaning:"Diffusing warmth and friendliness"},{word:"ELOQUENT",meaning:"Expressing yourself readily clearly effectively"},{word:"ENMITY",meaning:"A state of deep seated ill will"},{word:"IMPERTINENT",meaning:"Improperly forward or bold"},{word:"IMPUDENT",meaning:"Improperly forward or bold"}],a=`Enter words array here...\nEg:-\n${JSON.stringify(r.slice(0,2),null,2)}\n`}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,