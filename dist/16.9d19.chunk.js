(self.webpackChunkrandom_word_selector=self.webpackChunkrandom_word_selector||[]).push([[16],{16:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>d});var a=r(294),n=r(977);const s=function({settings:e,setSettings:t}){return a.createElement(a.Fragment,null,a.createElement("h2",null,"Settings"),a.createElement("div",{id:"settings",style:{width:"80%"}},a.createElement("input",{type:"checkbox",id:"display-meaning-setting",onChange:e=>t({shouldShowMeaning:e.target.checked}),checked:e.shouldShowMeaning}),a.createElement("label",{htmlFor:"display-meaning-setting"},"Display Meaning of current word")),a.createElement("br",null))};var l=r(997),i=r(61);const o=function(e){const{words:t,setApiKey:r,settings:n,setCustomWords:s,customWords:o,dataSource:c,setDataSource:u}=e;return a.createElement(a.Fragment,null,a.createElement("h2",null,"Data source"),a.createElement("div",{id:"words-input-div",style:{width:"100%",display:"flex",flexDirection:"row",flexWrap:"wrap"}},a.createElement("div",{id:"source-setting",style:{width:"20%"}},a.createElement("input",{id:"input-source-static",name:"data-source",type:"radio",onClick:()=>u(i.N.STATIC),defaultChecked:!0}),a.createElement("label",{htmlFor:"input-source-static"},a.createElement("strong",null,"Static list")),a.createElement("br",null),a.createElement("br",null),a.createElement("input",{id:"input-source-api",name:"data-source",type:"radio",onClick:()=>u(i.N.API)}),a.createElement("label",{htmlFor:"input-source-api"},a.createElement("strong",null,"RapidAPI"))),a.createElement("div",{id:"source-input",style:{width:"80%"}},c===i.N.STATIC?a.createElement("textarea",{id:"input-static-list",onChange:e=>s(e.target.value),placeholder:l.Q,style:{height:"50vh",width:"80%"},value:o||(n.isCustomWords?JSON.stringify(t,null,2):void 0)}):a.createElement("input",{id:"input-api-key",onChange:()=>r(evt.target.value),placeholder:"Add RapidAPI access key here.",style:{height:"15vh",width:"80%"},value:n.apiKey}))))};var c=r(825),u=r(844);const d=function(){const e=(0,n.k6)(),[t,r]=(0,c.o)(),[l,d]=(0,u.d)(),[m,h]=(0,a.useState)(null),[p,g]=(0,a.useState)(null),[y,E]=(0,a.useState)(i.N.STATIC);return a.createElement(a.Fragment,null,a.createElement(o,{words:t,apiKey:m,setApiKey:h,settings:l,dataSource:y,customWords:p,setDataSource:E,setCustomWords:g}),a.createElement(s,{settings:l,setSettings:d}),a.createElement("button",{style:{height:"2em",fontSize:"1.25em"},onClick:()=>{try{y===i.N.STATIC&&null!==p&&(()=>{let e;try{e=JSON.parse(p)}catch(e){const t="Passed data must be a valid JSON Array. Could not parse passed list.";throw console.error(t,e),new Error(t)}if(!Array.isArray(e))throw new Error("Custom words needs to be an array.");if(e.some((({word:e})=>!e)))throw new Error("Every element in passed data must have a `word` property.");r(e),d({isCustomWords:!0})})(),y===i.N.API&&(()=>{if(!m){const e="API key is required for RapidAPI data source.";throw console.error(e),new Error(e)}d({apiKey:m})})(),d({dataSource:y}),e.push("/selector")}catch(e){alert(e.message)}}},"Submit"))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,