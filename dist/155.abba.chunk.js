(self.webpackChunkrandom_word_selector=self.webpackChunkrandom_word_selector||[]).push([[155],{155:(e,n,r)=>{"use strict";r.r(n),r.d(n,{default:()=>s});var t=r(294),o=r(997),a=r(61),i=r(825),d=r(844);const s=function(){const[e]=(0,i.o)(),[n]=(0,d.d)(),[r,s]=(0,t.useState)([]),[l,m]=(0,t.useState)(!1),{dataSource:u,shouldShowMeaning:w}=n,g=e||o.X,[c,E,h]=(0,t.useMemo)((()=>[r.map(((e,n)=>t.createElement("li",{key:n},e?.word,w?` -> ${e?.meaning}`:""))),r[r.length-1],u!==a.N.API&&r.length===g.length]),[r]);return t.createElement(t.Fragment,null,t.createElement("div",{id:"words-div",style:{width:"100%"}},t.createElement("div",{id:"current-words-div",style:{width:"100%"},align:"center"},t.createElement("button",{onClick:async()=>{const e=u===a.N.API?await(async()=>{m(!0);const e=await async function(){try{const e=await fetch(a.W),[n]=await e.json();return{word:n?.word,meaning:n?.definition}}catch(e){return console.error(e),null}}();return m(!1),e})():(n=g.filter((e=>!r.includes(e))))[Math.floor(Math.random()*n.length)];var n;e?s(r.concat(e)):console.warn("Couldn't select a word for some reason ¯\\_(ツ)_/¯",{source:u})},disabled:h||l},"New Word"),h?t.createElement("h2",null,"ALL OUT OF WORDS!!!"):t.createElement(t.Fragment,null,w&&t.createElement("h2",null,E?.meaning),t.createElement("p",null,E?.word))),t.createElement("div",{id:"past-words-div"},c.length?t.createElement(t.Fragment,null,t.createElement("h2",null,"Past words:"),t.createElement("ol",null,c)):"")))}},997:(e,n,r)=>{"use strict";r.d(n,{X:()=>t,Q:()=>o});const t=[{word:"FLABBERGASTED",meaning:"As if struck dumb with astonishment and surprise"},{word:"ARCANE",meaning:"Requiring secret or mysterious knowledge"},{word:"GLUTTONY",meaning:"Habitual eating to excess"},{word:"EMPATHY",meaning:"Understanding and entering into another s feelings"},{word:"INEPT",meaning:"Generally incompetent and ineffectual"},{word:"IMPECCABLE",meaning:"Without fault or error"},{word:"EMBEZZLE",meaning:"Appropriate fraudulently to one s own use"},{word:"ABERRATION",meaning:"A state or condition markedly different from the norm"},{word:"DEFERENTIAL",meaning:"Showing courteous regard for people s feelings"},{word:"CUMULATIVE",meaning:"Increasing by successive addition"},{word:"INSATIABLE",meaning:"Impossible to satisfy"},{word:"BRUSQUE",meaning:"Rudely abrupt or blunt in speech or manner"},{word:"INHIBIT",meaning:"Limit the range or extent of"},{word:"CANDOR",meaning:"The quality of being honest and straightforward"},{word:"COMPLACENCY",meaning:"The feeling you have when you are satisfied with yourself"},{word:"GRATUITOUS",meaning:"Unnecessary and unwarranted"},{word:"CONFIDANT",meaning:"Someone to whom private matters are told"},{word:"ELATED",meaning:"Exultantly proud and joyful in high spiritsp"},{word:"FABRICATE",meaning:"Make up something artificial or untrue"},{word:"CALLOUS",meaning:"Emotionally hardened"},{word:"INNATE",meaning:"Present at birth but not necessarily hereditary"},{word:"COERCE",meaning:"Cause to do through pressure or necessity"},{word:"BRAZEN",meaning:"Unrestrained by convention or propriety"},{word:"COHERENT",meaning:"Marked by an orderly and consistent relation of parts"},{word:"APPEASE",meaning:"Make peace with"},{word:"HYPOCRISY",meaning:"Pretending to have qualities or beliefs that you do not have"},{word:"ABHOR",meaning:"Find repugnant"},{word:"INFAMY",meaning:"A state of extreme dishonor"},{word:"FORSAKE",meaning:"Leave someone who needs or counts on you leave in the lurch"},{word:"DILIGENT",meaning:"Quietly and steadily persevering in detail or exactness"},{word:"AMIABLE",meaning:"Diffusing warmth and friendliness"},{word:"ELOQUENT",meaning:"Expressing yourself readily clearly effectively"},{word:"ENMITY",meaning:"A state of deep seated ill will"},{word:"IMPERTINENT",meaning:"Improperly forward or bold"},{word:"IMPUDENT",meaning:"Improperly forward or bold"}],o=`Enter words array here...\nEg:-\n${JSON.stringify(t.slice(0,2),null,2)}\n`}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,